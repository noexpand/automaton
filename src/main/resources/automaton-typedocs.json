[
  {
    "name":"MutationType",
    "description":null,
    "fieldDocs":[
      {
        "name":"deleteDomainObject",
        "description":"Deletes the domain object of the given type and with the given id.",
        "paramDocs":[
          {
            "name":"type",
            "description":"domain type name"
          },
          {
            "name":"id",
            "description":"domain object id to delete"
          }
        ]
      },
      {
        "name":"storeDomainObject",
        "description":"Stores a any domain object. Note that you might have to manually register an input type.",
        "paramDocs":[
          {
            "name":"domainObject",
            "description":"domain object wrapped as DomainObject scalar"
          }
        ]
      }
    ]
  },
  {
    "name":"AutomatonApplication",
    "description":"Root model of the application models.",
    "fieldDocs":[
      
    ]
  },
  {
    "name":"ColumnConfig",
    "description":"Encapsulates the column configuration for an interactive query.",
    "fieldDocs":[
      {
        "name":"columnStates",
        "description":"List of column states",
        "paramDocs":[
          
        ]
      }
    ]
  },
  {
    "name":"ColumnState",
    "description":"The state of a column within an interactive query.",
    "fieldDocs":[
      {
        "name":"name",
        "description":"Column name",
        "paramDocs":[
          
        ]
      },
      {
        "name":"sortable",
        "description":"True if the column is sortable.",
        "paramDocs":[
          
        ]
      },
      {
        "name":"enabled",
        "description":"True if column is enabled. Server might disabled columns.",
        "paramDocs":[
          
        ]
      }
    ]
  },
  {
    "name":"Configuration",
    "description":"Root model of the application models.",
    "fieldDocs":[
      
    ]
  },
  {
    "name":"IncomingMessage",
    "description":"Container for incoming messages.",
    "fieldDocs":[
      
    ]
  },
  {
    "name":"InteractiveQuery",
    "description":"Interactive Query with [T] payload.",
    "fieldDocs":[
      {
        "name":"queryConfig",
        "description":"Query configuration the current result was produced with.",
        "paramDocs":[
          
        ]
      },
      {
        "name":"columnConfig",
        "description":"Column configuration for the current result.",
        "paramDocs":[
          
        ]
      },
      {
        "name":"rowCount",
        "description":"Total row count available.",
        "paramDocs":[
          
        ]
      },
      {
        "name":"type",
        "description":"Name of payload type (always '[T]')",
        "paramDocs":[
          
        ]
      },
      {
        "name":"rows",
        "description":"List with current rows of [T].",
        "paramDocs":[
          
        ]
      }
    ]
  },
  {
    "name":"ModuleFunctionReferences",
    "description":"Encapsulates the detected static function calls within one module.",
    "fieldDocs":[
      {
        "name":"module",
        "description":"Module name (without leading \"./\")",
        "paramDocs":[
          
        ]
      },
      {
        "name":"requires",
        "description":"Map of variable names mapping to",
        "paramDocs":[
          
        ]
      }
    ]
  },
  {
    "name":"NamedModel",
    "description":"Container model that has a unique name.",
    "fieldDocs":[
      
    ]
  },
  {
    "name":"OutgoingMessage",
    "description":"Container for incoming messages.",
    "fieldDocs":[
      
    ]
  },
  {
    "name":"Process",
    "description":null,
    "fieldDocs":[
      {
        "name":"inputType",
        "description":"GraphQL type to use as input type. For root processes these inputs are mapped by name from the HTTP parameters,\nfor sub-processes, the sub-process state",
        "paramDocs":[
          
        ]
      },
      {
        "name":"resultType",
        "description":"GraphQL type to use as result type when using this process as sub process. A sub-process must have an result type,\na normal process usually doesn't need one.",
        "paramDocs":[
          
        ]
      }
    ]
  },
  {
    "name":"QueryConfig",
    "description":"Encapsulates all parameters of an interactive query.",
    "fieldDocs":[
      {
        "name":"condition",
        "description":"FilterDSL condition graph or null",
        "paramDocs":[
          
        ]
      },
      {
        "name":"pageSize",
        "description":"Maximum number of paginated results.,",
        "paramDocs":[
          
        ]
      },
      {
        "name":"sortFields",
        "description":"Current sort order for the query.",
        "paramDocs":[
          
        ]
      },
      {
        "name":"id",
        "description":"Optional unique query identifier. Useful for server-side query implementations.",
        "paramDocs":[
          
        ]
      },
      {
        "name":"currentPage",
        "description":"Current page within the paginated results",
        "paramDocs":[
          
        ]
      }
    ]
  },
  {
    "name":"StaticFunctionReferences",
    "description":"Encapsulates the information contained within a <code>track-usage.json<\/code> file on the java side.\n\nIt contains the results of JavaScript code analysis that detects statically analyzable calls within the application\nreact components and other modules.",
    "fieldDocs":[
      
    ]
  },
  {
    "name":"ViewDeclaration",
    "description":"A named constant within a view.",
    "fieldDocs":[
      
    ]
  }
]